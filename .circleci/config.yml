# Python CircleCI 2.1 configuration file
version: 2.1
defaults: &defaults
  working_directory: ~/repo
orbs:
  sonarcloud: sonarsource/sonarcloud@2.0.0
  snyk: snyk/snyk@2.1.0
  ggshield: gitguardian/ggshield@1.1.4
  # using the latest pyhon orb
  python: circleci/python@2.1.1

jobs:
  build_and_test:
    <<: *defaults
    executor: python/default 

    steps:
      # Step 1: obtain repo from GitHub
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - python/install-packages:
          pkg-manager: pip
      - python/install-packages:    
          pip-dependency-file: requirements.txt
          pkg-manager: pip
      - python/install-packages:
          args: pytest
          pkg-manager: pip
          pypi-cache: false
      - python/install-packages:
          args: pylint
          pkg-manager: pip
          pypi-cache: false
      - run:
          command: |
            mkdir tests
            pytest --version 
            pytest --junitxml=tests/junit.xml
            pylint ./**/*.py --output-format=json:lint.json 
            pytest --cov --cov-report=xml 
          name: Test
      - sonarcloud/scan
      - snyk/scan
      - save_cache:
          paths:
            - py_modules
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - store_test_results:
          path: tests
      - persist_to_workspace:
          root: ~/repo
          paths: .
  test_pypi_publish:
    <<: *defaults
    executor: python/default
    steps:
      - checkout # checkout source code to working directory
      - python/install-packages:
          args: build
          pkg-manager: pip
          pypi-cache: false 
      - run:
          command: 
            python -m build
      - python/install-packages:
          args: twine
          pkg-manager: pip
          pypi-cache: false
      - run:
          command: 
            twine upload --repository testpypi dist/*
  pypi_publish:
    <<: *defaults
    executor: python/default
    steps:
      - checkout # checkout source code to working directory
      - python/install-packages:
          args: build
          pkg-manager: pip
          pypi-cache: false 
      - run:
          command: 
            python -m build
      - python/install-packages:
          args: twine
          pkg-manager: pip
          pypi-cache: false
      - run:
          command: 
            twine upload --repository pypi dist/*
workflows:
  build_and_test:
    jobs:
      - build_and_test
          #filters:
          #  tags:
          #    only: /^v.*/
      - test_pypi_publish:
          requires:
            - build_and_test
          #filters:
          #  branches:
          #    only:
          #      - dev
      - pypi_publish:
          requires:
            - test_pypi_publish
